language: java
services:
  - docker

cache:
  directories:
    - $HOME/.m2
    - $HOME/.cache

jdk:
  - openjdk8

before_install:
  # install usql for setup databases
#  - sudo add-apt-repository -y ppa:longsleep/golang-backports
#  - sudo apt-get -q update
#  - sudo apt install -y golang-go
#  - go get -v -u github.com/xo/usql
#  - usql --version
  # Extract project.version from pom.xml
  - export REPLICADB_RELEASE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
  - echo ${REPLICADB_RELEASE_VERSION}

install:
  - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V -P release
  - cp ./target/ReplicaDB-*.jar .
  - mkdir lib
  - cp ./target/lib/* ./lib  
  - tar -zcvf ReplicaDB-"${REPLICADB_RELEASE_VERSION}".tar.gz ReplicaDB-*.jar README.md lib conf bin LICENSE
  - zip -r -X ReplicaDB-"${REPLICADB_RELEASE_VERSION}".zip ReplicaDB-*.jar README.md lib conf bin LICENSE
  - ls -ltr


#before_script:
#  # Run databases services for integration tests
#  - docker-compose -f tests/docker-compose.yml up -d
#
#script:
#  - ls -lah
#  # unit tests
#  - mvn test -B
#  # integration tests  
#  - ./tests/pg/test-runner.sh
#
#after_script: 
#  - docker-compose down -v 
#
#before_deploy:
#  # Set up git user name and tag this commit
#  - git config --local user.name "YOUR GIT USER NAME"
#  - git config --local user.email "YOUR GIT USER EMAIL"
#  - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
#  - git tag $TRAVIS_TAG
#  - TRAVIS_COMMIT_MESSAGE
#deploy:
#  provider: releases
#  api_key: "GITHUB OAUTH TOKEN"
#  file: "FILE TO UPLOAD"
#  skip_cleanup: true
#  on:
#    tags: true
#    branch: master
#    condition: "$TRAVIS_TAG =~ ^release.*$"
#    draft: true